// Generated by view binder compiler. Do not edit!
package com.techcamino.mft_rider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.techcamino.mft_rider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout bottomSheet;

  @NonNull
  public final View dummy;

  @NonNull
  public final TextView header;

  @NonNull
  public final EditText reason;

  @NonNull
  public final CardView reasonCard;

  @NonNull
  public final CardView submitDecline;

  @NonNull
  public final TextView viewMapText;

  private BottomSheetBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout bottomSheet, @NonNull View dummy, @NonNull TextView header,
      @NonNull EditText reason, @NonNull CardView reasonCard, @NonNull CardView submitDecline,
      @NonNull TextView viewMapText) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.dummy = dummy;
    this.header = header;
    this.reason = reason;
    this.reasonCard = reasonCard;
    this.submitDecline = submitDecline;
    this.viewMapText = viewMapText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout bottomSheet = (ConstraintLayout) rootView;

      id = R.id.dummy;
      View dummy = ViewBindings.findChildViewById(rootView, id);
      if (dummy == null) {
        break missingId;
      }

      id = R.id.header;
      TextView header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.reason;
      EditText reason = ViewBindings.findChildViewById(rootView, id);
      if (reason == null) {
        break missingId;
      }

      id = R.id.reasonCard;
      CardView reasonCard = ViewBindings.findChildViewById(rootView, id);
      if (reasonCard == null) {
        break missingId;
      }

      id = R.id.submit_decline;
      CardView submitDecline = ViewBindings.findChildViewById(rootView, id);
      if (submitDecline == null) {
        break missingId;
      }

      id = R.id.view_map_text;
      TextView viewMapText = ViewBindings.findChildViewById(rootView, id);
      if (viewMapText == null) {
        break missingId;
      }

      return new BottomSheetBinding((ConstraintLayout) rootView, bottomSheet, dummy, header, reason,
          reasonCard, submitDecline, viewMapText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
